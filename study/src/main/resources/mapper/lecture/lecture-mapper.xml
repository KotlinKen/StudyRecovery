<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lecture">
   <resultMap type="map" id="map">
      <result property="CONTENT" column="content" jdbcType="CLOB" javaType="java.lang.String"/>
   </resultMap>
   
   <insert id="insertLecture">
      <if test="upfile.equals('')">      
         INSERT INTO STUDY VALUES(SEQ_STUDY.NEXTVAL,
                            #{mno}, 
                            #{subno}, 
                            #{tno}, 
                            #{dno}, 
                            #{title}, 
                            #{freqs},
                            #{content}, 
                            #{price}, 
                            NULL, 
                            #{recruit}, 
                            '모집 중',
                            #{time}, 
                            'lecture',                         
                            #{ldate}, 
                            #{sdate}, 
                            #{edate}, 
                            sysdate,
                            #{etc})
      </if>
      <if test="!upfile.equals('')">
         INSERT INTO STUDY VALUES(SEQ_STUDY.NEXTVAL,
                               #{mno}, 
                               #{subno}, 
                               #{tno}, 
                               #{dno}, 
                               #{title}, 
                               #{freqs}, 
                               #{content}, 
                               #{price}, 
                               #{upfile}, 
                               #{recruit}, 
                               '모집 중', 
                               #{time}, 
                               'lecture',                         
                               #{ldate}, 
                               #{sdate}, 
                               #{edate}, 
                               sysdate,
                               #{etc})
      </if>
   </insert>
   
   <insert id="applyLecture">
      INSERT INTO CREW VALUES( SEQ_CREW.NEXTVAL, #{mno}, #{sno})
   </insert>
   
   <insert id="insertPay">
      <if test="status==1">
         INSERT INTO PAY VALUES( #{pno}, #{sno}, #{mno}, 'phone', '결제완료', #{price}, SYSDATE)
      </if>
      <if test="status==0">
         INSERT INTO PAY VALUES( #{pno}, #{sno}, #{mno}, 'phone', '결제실패', #{price}, SYSDATE)
      </if>
   </insert>
   
   <insert id="succesPayCancel">
   		UPDATE PAY SET STATUS = '결제취소', PDATE = SYSDATE WHERE PNO = #{pno}
   </insert>
   
   <update id="successAdminPayCancel">
   		UPDATE PAY SET STATUS = '결제취소', PDATE = SYSDATE WHERE PNO = #{pno}
   </update>
   
   <select id="selectPay" resultType="_long">
   		SELECT PNO 
   		FROM PAY 
   		WHERE SNO = #{sno} AND MNO = #{mno} AND STATUS = '결제완료' AND ROWNUM = 1 ORDER BY PDATE
   </select>
   
   <select id="selectPayList" resultMap="map">
   		SELECT P.PNO AS PNO, 
		       S.SNO AS SNO,
		       M.MNO AS MNO,
		       M.MNAME AS MNAME, 
		       S.TITLE AS TITLE, 
		       TO_CHAR(S.REGDATE, 'YYYY-MM-DD') AS REGDATE,
		       TO_CHAR(S.SDATE, 'YYYY-MM-DD') AS SDATE,
		       S.FREQ AS FREQ,
		       S.TIME AS TIME,
		       S.PRICE AS PRICE, 
		       (SELECT COUNT(*) AS CNT FROM CREW C WHERE C.SNO = S.SNO) CNT,
		       S.RECRUIT AS RECRUIT, 
		       L.LOCAL AS LOCAL, 
		       T.TOWNNAME AS TOWNNAME, 
		       K.KINDNAME AS KNAME,
		       SUB.SUBJECTNAME AS SUBNAME,
		       S.STATUS AS STATUS,
		       P.STATUS AS PSTATUS       
		FROM PAY P, STUDY S, MEMBER M, TOWN T, LOCAL L, KIND K, SUBJECT SUB 
		WHERE P.SNO = S.SNO AND P.MNO = M.MNO AND S.TNO = T.TNO AND T.LNO = L.LNO AND S.SUBNO = SUB.SUBNO AND SUB.KNO = K.KNO AND S.TYPE = 'lecture'
		<if test="member!=''">
			AND MNAME LIKE '%'||#{member}||'%'
		</if>
		<if test="price>0">
			AND S.PRICE <![CDATA[ <= ]]> #{price}
		</if>
		<if test="year!=0">
			AND TO_CHAR(SDATE, 'YYYY') = #{year}
		</if>	
		<if test="month!=0">
			AND TO_CHAR(SDATE, 'MM') = #{month}
		</if>	
		<if test="status!='전체'">
			AND P.STATUS = #{status}
		</if>
		ORDER BY REGDATE
   </select>
   
   <select id="selectLocList" resultMap="map">
      SELECT * FROM LOCAL
   </select>
   
   <select id="selectTownList" resultMap="map">
      SELECT * FROM TOWN WHERE LNO = #{localNo}
   </select>
   
   <select id="selectSubList" resultMap="map">
      SELECT * FROM SUBJECT WHERE KNO = #{kindNo}
   </select>
   
   <select id="selectKindList" resultMap="map">
      SELECT * FROM KIND
   </select>
   
   <select id="selectDiffList" resultMap="map">
      SELECT * FROM DIFF
   </select>
   
   <select id="selectLectureList" resultMap="map">      
      SELECT SNO,
             A.MNO AS MNO,
             (SELECT M.MNAME AS MNAME FROM MEMBER M WHERE M.MNO = A.MNO) MNAME,
              (SELECT M.MID AS MNAME FROM MEMBER M WHERE M.MNO = A.MNO) MID,
             (SELECT M.NPOINT AS NPOINT FROM MEMBER M WHERE M.MNO = A.MNO) NPOINT,
             (SELECT M.POINT AS NPOINT FROM MEMBER M WHERE M.MNO = A.MNO) NPOINT,
             (SELECT M.EXP AS NPOINT FROM MEMBER M WHERE M.MNO = A.MNO) EXP,
             LNO,
             (SELECT L.LOCAL AS LOCAL FROM LOCAL L WHERE L.LNO = A.LNO) LOCAL, 
             TNO,
             (SELECT T.TOWNNAME AS TNAME FROM TOWN T WHERE T.TNO = A.TNO) TNAME,
             KNO,
             (SELECT K.KINDNAME AS KNAME FROM KIND K WHERE K.KNO = A.KNO) KNAME,
             SUBNO,
             (SELECT SUB.SUBJECTNAME AS SUBNAME FROM SUBJECT SUB WHERE SUB.SUBNO = A.SUBNO) SUBNAME,
             DNO,
             (SELECT D.DIFFICULTNAME AS DNAME FROM DIFF D WHERE D.DNO = A.DNO) DNAME, 
             (SELECT M.COVER AS COVER FROM MEMBER M WHERE M.MNO = A.MNO) COVER,
             (SELECT M.MPROFILE AS PROFILE FROM MEMBER M WHERE M.MNO = A.MNO ) PROFILE,
             (SELECT COUNT(*) AS CNT FROM CREW C WHERE C.SNO = A.SNO) CNT,
             RECRUIT,
             FREQ,
             CONTENT,
             TITLE,
             UPFILE,
             TIME,
             NVL(PRICE, 0) AS PRICE,
             STATUS,        
             TO_CHAR(LDATE,'yyyy-mm-dd') LDATE,
             TO_CHAR(SDATE,'yyyy-mm-dd') SDATE,
             TO_CHAR(EDATE,'yyyy-mm-dd') EDATE,
             TO_CHAR(REGDATE,'yyyy-mm-dd') REGDATE,
             DECODE(STATUS,'모집 마감',2,'진행 중',3,'강의 종료',4,1) STATUSORDER
      FROM (SELECT S.*, 
                  (SELECT T.LNO AS LNO FROM TOWN T WHERE T.TNO = S.TNO) LNO,
                  (SELECT SUB.KNO AS KNO FROM SUBJECT SUB WHERE SUB.SUBNO = S.SUBNO) KNO,
            	  (SELECT M.QDATE AS QDATE FROM MEMBER M WHERE S.MNO = M.MNO) QDATE
            FROM STUDY S 
      WHERE TYPE = 'lecture') A
      WHERE QDATE IS NULL
      ORDER BY STATUSORDER, SNO DESC
   </select>
   
   <select id="selectTotalPayCount" resultType="_int">
   		SELECT COUNT(*) FROM PAY
   </select>
   
   <select id="selectTotalLectureCount" resultType="_int">
      SELECT COUNT(*) FROM STUDY WHERE TYPE = 'lecture'
   </select>
   
   <select id="selectLectureOne" resultMap="map">
      SELECT SNO,
            A.MNO AS MNO,
             (SELECT M.MNAME AS MNAME FROM MEMBER M WHERE M.MNO = A.MNO) MNAME,
             LNO,
             (SELECT L.LOCAL AS LOCAL FROM LOCAL L WHERE L.LNO = A.LNO) LOCAL, 
             TNO,
             (SELECT T.TOWNNAME AS TNAME FROM TOWN T WHERE T.TNO = A.TNO) TNAME,
             KNO,
             (SELECT K.KINDNAME AS KNAME FROM KIND K WHERE K.KNO = A.KNO) KNAME,
             SUBNO,
             (SELECT SUB.SUBJECTNAME AS SUBNAME FROM SUBJECT SUB WHERE SUB.SUBNO = A.SUBNO) SUBNAME,
             DNO,
             (SELECT D.DIFFICULTNAME AS DNAME FROM DIFF D WHERE D.DNO = A.DNO) DNAME, 
             (SELECT M.COVER AS COVER FROM MEMBER M WHERE M.MNO = A.MNO) COVER,
             (SELECT M.MPROFILE AS PROFILE FROM MEMBER M WHERE M.MNO = A.MNO ) PROFILE,
             FREQ,
             CONTENT,
             (SELECT COUNT(*) AS CNT FROM CREW C WHERE C.SNO = A.SNO) CNT,
             RECRUIT,
              TITLE,
              UPFILE,
              TIME,
              NVL(PRICE, 0) AS PRICE,
              STATUS,        
              TO_CHAR(LDATE,'yyyy-mm-dd') LDATE,
              TO_CHAR(SDATE,'yyyy-mm-dd') SDATE,
              TO_CHAR(EDATE,'yyyy-mm-dd') EDATE,
              TO_CHAR(REGDATE,'yyyy-mm-dd') REGDATE
      FROM (SELECT S.*, 
                  (SELECT T.LNO AS LNO FROM TOWN T WHERE T.TNO = S.TNO) LNO,
                  (SELECT SUB.KNO AS KNO FROM SUBJECT SUB WHERE SUB.SUBNO = S.SUBNO) KNO,
            	  (SELECT M.QDATE AS QDATE FROM MEMBER M WHERE S.MNO = M.MNO) QDATE
            FROM STUDY S 
      WHERE TYPE = 'lecture' AND SNO = #{sno}) A
      WHERE QDATE IS NULL
      ORDER BY SNO DESC
   </select>
   
   <select id="selectReviewList" resultType="map">
   		SELECT R.RNO AS RNO,
		       R.MNO AS MNO,
		       M.MNAME AS MNAME,
		       R.TMNO AS TMNO,
		       (SELECT M.MNAME AS TMNAME FROM MEMBER M WHERE M.MNO = R.TMNO) TMNAME, 
		       R.POINT AS POINT,
		       R.CONTENT AS CONTENT,
		       R.REGDATE AS REGDATE
		FROM STUDY S, REVIEW R, MEMBER M 
		WHERE S.SNO = R.SNO
		AND R.MNO = M.MNO
		AND S.SNO = #{sno}
		ORDER BY RNO
   </select>
   
   <select id="selectLectureByMnoTypeLecture" resultType="lecture">
      SELECT * FROM STUDY WHERE SNO = #{sno}
   </select>
   
   <select id="selectTotalLectureCountBySearch" resultType="_int">
      SELECT COUNT(*)
      FROM (SELECT S.*, 
            (SELECT T.LNO AS LNO FROM TOWN T WHERE T.TNO = S.TNO) LNO,
            (SELECT SUB.KNO AS KNO FROM SUBJECT SUB WHERE SUB.SUBNO = S.SUBNO) KNO,
            (SELECT M.MNAME AS MNAME FROM MEMBER M WHERE M.MNO = S.MNO) MNAME,
            (SELECT M.QDATE AS QDATE FROM MEMBER M WHERE S.MNO = M.MNO) QDATE
        FROM STUDY S 
        WHERE TYPE = 'lecture') A
	    WHERE QDATE IS NULL
      <if test="lno != 0">
         AND A.LNO = #{lno}
      </if>
      <if test="kno != 0">
         AND A.KNO = #{kno}
      </if>
      <if test="tno != 0">
         AND A.TNO = #{tno}
      </if>
      <if test="dno != 0">
         AND A.DNO = #{dno}
      </if>
      <if test="subno != 0">
         AND A.SUBNO = #{subno}
      </if>
      <if test="leadername!=null and leadername !='' ">
         AND A.MNAME like '%'||#{leadername}||'%'
      </if>
      ORDER BY SNO DESC
   </select>
   
   <select id="selectLectureListBySearch" resultMap="map">
      SELECT SNO,
             (SELECT M.MID AS MNAME FROM MEMBER M WHERE M.MNO = A.MNO) MID,
             (SELECT M.NPOINT AS NPOINT FROM MEMBER M WHERE M.MNO = A.MNO) NPOINT,
             (SELECT M.POINT AS NPOINT FROM MEMBER M WHERE M.MNO = A.MNO) NPOINT,
             (SELECT M.EXP AS NPOINT FROM MEMBER M WHERE M.MNO = A.MNO) EXP,
             (SELECT L.LOCAL AS LOCAL FROM LOCAL L WHERE L.LNO = A.LNO) LOCAL, 
             (SELECT T.TOWNNAME AS TNAME FROM TOWN T WHERE T.TNO = A.TNO) TNAME,
             (SELECT K.KINDNAME AS KNAME FROM KIND K WHERE K.KNO = A.KNO) KNAME,
             (SELECT SUB.SUBJECTNAME AS SUBNAME FROM SUBJECT SUB WHERE SUB.SUBNO = A.SUBNO) SUBNAME,
             (SELECT D.DIFFICULTNAME AS DNAME FROM DIFF D WHERE D.DNO = A.DNO) DNAME, 
             (SELECT M.COVER AS COVER FROM MEMBER M WHERE M.MNO = A.MNO) COVER,
             (SELECT M.MPROFILE AS PROFILE FROM MEMBER M WHERE M.MNO = A.MNO ) PROFILE,
             (SELECT COUNT(*) AS CNT FROM CREW C WHERE C.SNO = A.SNO) CNT,
             RECRUIT,
              TITLE,
              UPFILE,
              TIME,
              CONTENT,
              NVL(PRICE, 0) AS PRICE,
              STATUS,        
              TO_CHAR(LDATE,'yyyy-mm-dd') LDATE,
              TO_CHAR(SDATE,'yyyy-mm-dd') SDATE,
              TO_CHAR(EDATE,'yyyy-mm-dd') EDATE,
              TO_CHAR(REGDATE,'yyyy-mm-dd') REGDATE
      FROM (SELECT S.*, 
                  (SELECT T.LNO AS LNO FROM TOWN T WHERE T.TNO = S.TNO) LNO,
                  (SELECT SUB.KNO AS KNO FROM SUBJECT SUB WHERE SUB.SUBNO = S.SUBNO) KNO,
                  (SELECT M.MNAME AS MNAME FROM MEMBER M WHERE M.MNO = S.MNO) MNAME,
            	  (SELECT M.QDATE AS QDATE FROM MEMBER M WHERE S.MNO = M.MNO) QDATE
            FROM STUDY S 
            WHERE TYPE = 'lecture') A
      WHERE QDATE IS NULL
      <if test="lno != 0">
         AND A.LNO = #{lno}
      </if>
      <if test="kno != 0">
         AND A.KNO = #{kno}
      </if>
      <if test="tno != 0">
         AND A.TNO = #{tno}
      </if>
      <if test="dno != 0">
         AND A.DNO = #{dno}
      </if>
      <if test="subno != 0">
         AND A.SUBNO = #{subno}
      </if>
      <if test="leadername!=null and leadername !=''">
         AND A.MNAME like '%'||#{leadername}||'%'
      </if>
      ORDER BY SNO DESC
   </select>
   
   <select id="preinsertApply" resultType="_int">
      SELECT COUNT(*) FROM CREW WHERE SNO = #{sno} AND MNO = #{mno}
   </select>
   
   <select id="peopleCnt" resultType="_int">
   		SELECT COUNT(*) AS CNT
		FROM STUDY S, CREW C
		WHERE S.SNO = C.SNO
		AND S.SNO = #{sno}
   </select>
   
   <select id="recruitCnt" resultType="_int">
   		SELECT RECRUIT FROM STUDY WHERE SNO = #{sno}
   </select>
   
   <select id="selectLectureListByMno" resultMap="map">
      SELECT SDATE,
            EDATE,
             FREQ,
             SUBSTR(S.TIME,0,INSTR(TIME,':')-1) AS STIME,
             SUBSTR(S.TIME,INSTR(TIME,'~')+1,INSTR(TIME,':',-1)-INSTR(TIME,'~')-1) AS ETIME 
      <if test="key=='study'">
      FROM STUDY S
      </if>
      <if test="key=='crew'">
      FROM CREW C RIGHT JOIN STUDY S ON C.SNO = S.SNO
      </if>
      WHERE S.MNO = #{mno}
   </select>
   
   <select id="searchAdminLectureList" resultMap="map">
   		SELECT S.SNO AS SNO, 
		       S.TITLE AS TITLE, 
		       M.MNAME AS MNAME, 
		       L.LOCAL AS LOCAL, 
		       T.TOWNNAME AS TOWNNAME, 
		       K.KINDNAME AS KNAME,
		       SUB.SUBJECTNAME AS SUBNAME,
		       (SELECT COUNT(*) AS CNT FROM CREW C WHERE C.SNO = S.SNO) CNT,
		       S.RECRUIT AS RECRUIT,
		       S.FREQ AS FREQ,
		       S.TIME AS TIME,
		       TO_CHAR(S.SDATE, 'YYYY-MM-DD') AS SDATE,
		       TO_CHAR(S.EDATE, 'YYYY-MM-DD') AS EDATE,
		       TO_CHAR(S.REGDATE, 'YYYY-MM-DD') AS REGDATE,
		       S.STATUS AS STATUS,
		       S.PRICE AS PRICE
		FROM STUDY S, MEMBER M, LOCAL L, TOWN T, KIND K, SUBJECT SUB
		WHERE S.TYPE = 'lecture'
		      AND S.MNO = M.MNO
		      AND S.TNO = T.TNO
		      AND T.LNO = L.LNO
		      AND S.SUBNO = SUB.SUBNO
		      AND SUB.KNO = K.KNO
		      AND M.QDATE IS NULL
		      <if test="lno!=0">
		      AND L.LNO = #{lno}
		      </if>
		      <if test="tno!=0">
		      AND T.TNO = #{tno}
		      </if>	
		      <if test="subno!=0">
		      AND SUB.SUBNO = #{subno}
		      </if>	
		      <if test="kno!=0">
		      AND K.KNO = #{kno}
		      </if>	
		      <if test="leader!='전체'">
		      AND MNAME LIKE '%'||#{leader}||'%'
		      </if>	
		      <if test="title!='전체'">
		      AND TITLE LIKE '%'||#{title}||'%'
		      </if>	
		      <if test="year!=0">
		      AND TO_CHAR(SDATE, 'YYYY') = #{year}
		      </if>	
		      <if test="month!=0">
		      AND TO_CHAR(SDATE, 'MM') = #{month}
		      </if>	
		      <if test="status!='전체'">
		      AND S.STATUS = #{status}
		      </if>		      
		ORDER BY SNO
   </select>
   
   <select id="selectTotalAdminLectureCount" resultType="_int">
		SELECT COUNT(*)
		FROM STUDY S, MEMBER M, LOCAL L, TOWN T, KIND K, SUBJECT SUB
		WHERE S.TYPE = 'lecture'
		      AND S.MNO = M.MNO
		      AND S.TNO = T.TNO
		      AND T.LNO = L.LNO
		      AND S.SUBNO = SUB.SUBNO
		      AND SUB.KNO = K.KNO
		      AND M.QDATE IS NULL
		      <if test="lno!=0">
		      AND L.LNO = #{lno}
		      </if>
		      <if test="tno!=0">
		      AND T.TNO = #{tno}
		      </if>	
		      <if test="subno!=0">
		      AND SUB.SUBNO = #{subno}
		      </if>	
		      <if test="kno!=0">
		      AND K.KNO = #{kno}
		      </if>	
		      <if test="leader!='전체'">
		      AND MNAME LIKE '%'||#{leader}||'%'
		      </if>	
		      <if test="title!='전체'">
		      AND TITLE LIKE '%'||#{title}||'%'
		      </if>	
		      <if test="year!=0">
		      AND TO_CHAR(SDATE, 'YYYY') = #{year}
		      </if>	
		      <if test="month!=0">
		      AND TO_CHAR(SDATE, 'MM') = #{month}
		      </if>
		      <if test="status!='전체'">
		      AND S.STATUS = #{status}
		      </if>
   </select>
   
   <delete id="deleteLecture">
      DELETE FROM STUDY WHERE SNO = #{sno} and (STATUS = '강의 종료' OR STATUS = '모집 중' OR STATUS = '마감 임박')
   </delete>
   
   <delete id="deleteLectures">
      delete from study where sno in 
      
      <foreach item="sno" index="i" collection="lectures" open="(" separator="," close=")">
         #{sno}     
      </foreach>
    </delete>
   
   <select id="selectByDeadline" resultMap="map">
   select    s.sno,s.mno,s.subno,s.tno,s.dno,s.title,s.freq,s.content,s.price,s.upfile,s.recruit,s.status,s.time,s.type,s.etc,
  		  to_char(s.ldate,'yyyy-mm-dd') ldate, to_char(s.sdate,'yyyy-mm-dd') sdate, to_char(s.edate,'yyyy-mm-dd') edate, to_char(s.regdate,'yyyy-mm-dd') regdate,
 		  m.mprofile,m.mid,
 		  l.local,l.lno,
 		  t.townname tname, sb.subjectname subname, k.kindname kname, d.DIFFICULTNAME dname,
          decode(status,'마감 임박',1,'모집 중','2') statusOrder,
          (select count(*) applycnt from apply where sno=s.sno) cnt
   from  study s join diff d on s.dno=d.dno join town t on s.tno=t.tno join local l on t.lno=l.lno join member m on s.mno=m.mno join subject sb on sb.subno=s.subno join kind k on k.kno=sb.kno 
   where s.type='lecture' and s.status in ('모집 중','마감 임박')
   AND M.QDATE IS NULL
    <if test="lno!=0">
	and l.lno =#{lno}
	</if>
	<if test="tno!=0">
	and s.tno=#{tno}
	</if>
	<if test="subno!=0">
	and sb.subno=#{subno}
	</if>
	<if test="kno!=0">
	and k.kno=#{kno}
	</if>
	<if test="dno!=null and dno!=0">
	and s.dno=#{dno}
	</if>
	<if test="leadername!=null and leadername !='' ">
	and  m.mname like '%'||#{leadername}||'%'  
	</if>
	<if test="status!=null and status!='전체'">
	and s.status=#{status}
	</if>
	<if test="searchCase=='deadline'">
    order by statusOrder,s.ldate
	</if>
   
   </select>
   
   <select id="lectureDeadlineCount" resultType="_int">
      select count(*) cnt
	  from  study s join diff d on s.dno=d.dno join town t on s.tno=t.tno join local l on t.lno=l.lno 
	  		join subject sb on s.subno=sb.subno join kind k on sb.kno=k.kno  join member m on s.mno=m.mno
	  where s.type='lecture' and s.status in ('모집 중','마감 임박')
	  AND M.QDATE IS NULL
    <if test="lno!=0">
	and l.lno =#{lno}
	</if>
	<if test="tno!=0">
	and s.tno=#{tno}
	</if>
	<if test="subno!=0">
	and sb.subno=#{subno}
	</if>
	<if test="kno!=0">
	and k.kno=#{kno}
	</if>
	<if test="dno!=null and dno!=0">
	and s.dno=#{dno}
	</if>
	<if test="leadername!=null and leadername !='' ">
	and  m.mname like '%'||#{leadername}||'%'  
	</if>
	<if test="status!=null and status!='전체'">
	and s.status=#{status}
	</if>
	<if test="searchCase=='deadline'">
	order by s.ldate
	</if>   
   </select>
   
   <select id="selectByApply" resultMap="map">
    select s.sno, s.mno,s.subno,s.tno,s.dno,l.lno,title,freq,content,price,upfile,recruit,s.status,s.time,
       to_char(s.ldate,'yyyy-mm-dd') ldate, to_char(s.sdate,'yyyy-mm-dd') sdate,to_char(s.edate,'yyyy-mm-dd') edate,to_char(s.regdate,'yyyy-mm-dd') regdate,
      s.etc,k.kno,SUBJECTNAME subname,SNAMEENAME subename, kindname kname, KNAMEENAME kename, DIFFICULTNAME dname,local, 
      mid, mname, mprofile,m.point, cover,t.townname tname,
      decode(s.status,'마감 임박',1,'모집 중',2) statusOrder
      from  study s join subject sb on s.subno=sb.subno join kind k on k.kno=sb.kno join diff d on s.dno=d.dno join town t on t.tno=s.tno join local l on l.lno=t.lno join member m on m.mno=s.mno
     where s.type='lecture' and s.status in ('모집 중','마감 임박') and m.qdate is null
	<if test="lno!=0">
	and l.lno =#{lno}
	</if>
	<if test="tno!=0">
	and s.tno=#{tno}
	</if>
	<if test="subno!=0">
	and sb.subno=#{subno}
	</if>
	<if test="kno!=0">
	and k.kno=#{kno}
	</if>
	<if test="dno!=null and dno!=0">
	and s.dno=#{dno}
	</if>
	<if test="leadername!=null and leadername !='' ">
	and  m.mname like '%'||#{leadername}||'%'  
	</if>
	order by statusOrder, m.point desc, s.regdate desc
   </select>
   
   <select id="studyByApplyCount" resultType="_int">
     select count(*)  cnt
     from  study s join subject sb on s.subno=sb.subno join kind k on k.kno=sb.kno join diff d on s.dno=d.dno join town t on t.tno=s.tno join local l on l.lno=t.lno join member m on m.mno=s.mno
     where s.type='lecture' and s.status in ('모집 중','마감 임박') and m.qdate is null
	<if test="lno!=0">
	and l.lno =#{lno}
	</if>
	<if test="tno!=0">
	and s.tno=#{tno}
	</if>
	<if test="subno!=0">
	and sb.subno=#{subno}
	</if>
	<if test="kno!=0">
	and k.kno=#{kno}
	</if>
	<if test="dno!=null and dno!=0">
	and s.dno=#{dno}
	</if>
	<if test="leadername!=null and leadername !='' ">
	and  m.mname like '%'||#{leadername}||'%'  
	</if>
	order by cnt desc, s.REGDATE
   </select>   
   
   <select id="lectureWish" resultType="_int">
      SELECT COUNT(*) AS CNT FROM WISH WHERE SNO = #{sno} AND MNO = #{mno}
   </select>
   
   <select id="confirmInstructor" resultType="_int">
      SELECT COUNT(*) AS CNT FROM INSTRUCTOR WHERE MNO = #{mno} AND STATE = 'O'
   </select>
   
   <insert id="addWishLecture">
      INSERT INTO WISH VALUES(SEQ_WISH.NEXTVAL, #{mno}, #{sno}, SYSDATE)
   </insert>
   
   <delete id="lectureWishCancel">
      DELETE FROM WISH WHERE MNO = #{mno} AND SNO = #{sno}
   </delete>
   
   <delete id="lectureCancel">
		DELETE FROM CREW 
		WHERE MNO = #{mno} AND SNO = #{sno}
   </delete>
   
	<!-- 김률민 추가 -->
	<select id="restTypeLister_backup" resultMap="map">
	SELECT S.*, M.*, T.*, D.*, L.*, SUB.*, K.*, 
	(SELECT  COUNT(*) FROM APPLY AA WHERE S.SNO = AA.SNO) APPLYCNT 
	FROM STUDY S, MEMBER M, TOWN T, DIFF D, LOCAL L, SUBJECT SUB, KIND K
		<trim prefix="WHERE" prefixOverrides="AND | OR ">
			<if test="searchType != null and searchType != '' ">
				<if test="searchKeyword != null and searchKeyword != '' ">
					AND ${searchType} like '%'||#{searchKeyword}||'%'
				</if>
			</if>
			S.MNO = M.MNO AND S.TNO = T.TNO AND S.DNO = D.DNO AND 
			T.LNO = L.LNO AND S.SUBNO = SUB.SUBNO AND SUB.KNO = K.KNO
			
			<!-- 스터디냐 강의냐 -->
			<if test="type != null and type != '' ">
				AND TYPE = #{type}
			</if>
			<if test="status != null and status !='' ">
				AND STATUS = #{status}
			</if>			
			<if test="rownum != null and rownum !='' ">
				AND ROWNUM <![CDATA[ <= ]]> #{rownum}
			</if>
		</trim>
		<if test="order != null and order != '' ">
			ORDER BY
			<choose>
				<when test="order eq 'SDATE'">SDATE</when>
				<when test="order eq 'LDATE'">LDATE</when>
				<when test="order eq 'EDATE'">EDATE</when>
				<when test="order eq 'SATUS'">STATUS</when>
			</choose>
			<choose>
				<when test="desc eq 'desc'"> DESC </when>
				<otherwise> ASC </otherwise>
			</choose>
		</if>
	</select>
	
	
	<select id="restTypeLister" resultMap="map">
	SELECT * FROM ( SELECT 
		SNO, TITLE, FREQ, CONTENT, PRICE, UPFILE, RECRUIT, STATUS, TIME, TYPE, LDATE, SDATE, EDATE, S.REGDATE SREGDATE, S.ETC SETC,
        M.MNO, MID, MNAME, PWD, PHONE, MPROFILE, COVER, EMAIL, BIRTH, GENDER, FAVOR, EXP, POINT, NPOINT, M.REGDATE MREGDATE, QDATE,
        T.TNO, TOWNNAME,
        D.DNO, DIFFICULTNAME, D.ETC DETC,
        L.LNO, LOCAL,
        SUB.SUBNO, SUBJECTNAME, SNAMEENAME,
        K.KNO , KINDNAME, KNAMEENAME,
		(SELECT  COUNT(*) FROM APPLY AA WHERE S.SNO = AA.SNO) APPLYCNT 
		FROM STUDY S, MEMBER M, TOWN T, DIFF D, LOCAL L, SUBJECT SUB, KIND K
		<trim prefix="WHERE" prefixOverrides="AND | OR ">
		S.MNO = M.MNO AND S.TNO = T.TNO AND S.DNO = D.DNO AND 
		T.LNO = L.LNO AND S.SUBNO = SUB.SUBNO AND SUB.KNO = K.KNO
		
			<if test="searchType != null and searchType != '' ">
				<if test="searchKeyword != null and searchKeyword != '' ">
				AND ${searchType} like '%'||#{searchKeyword}||'%'
				</if>
			</if>
			
			<!-- 스터디냐 강의냐 -->
			<if test="type != null and type != '' ">
				AND TYPE = #{type}
			</if>
			<if test="status != null and status !='' ">
				AND STATUS = #{status}
			</if>			

		</trim>
		<if test="order != null and order != '' ">
			ORDER BY
			<choose>
				<when test="order eq 'SREGDATE'">SREGDATE</when>
				<when test="order eq 'SDATE'">SDATE</when>
				<when test="order eq 'LDATE'">LDATE</when>
				<when test="order eq 'EDATE'">EDATE</when>
				<when test="order eq 'SATUS'">STATUS</when>
			</choose>
			<choose>
				<when test="desc eq 'desc'"> DESC </when>
				<otherwise> ASC </otherwise>
			</choose>
		</if>
		) 
		<trim prefix="WHERE" prefixOverrides="AND | OR ">
			<if test="rownum != null and rownum !='' ">
				AND ROWNUM <![CDATA[ <= ]]> #{rownum}
			</if>
		</trim>
		
	</select>
	
	
	
	
	
	
	
	
	
	
<!-- 김률민 추가 -->   


</mapper>